<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TipoEndereco', 'doctrine');

/**
 * BaseTipoEndereco
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $nome
 * @property string $descricao
 * @property Doctrine_Collection $Endereco
 * 
 * @method integer             getId()        Returns the current record's "id" value
 * @method string              getNome()      Returns the current record's "nome" value
 * @method string              getDescricao() Returns the current record's "descricao" value
 * @method Doctrine_Collection getEndereco()  Returns the current record's "Endereco" collection
 * @method TipoEndereco        setId()        Sets the current record's "id" value
 * @method TipoEndereco        setNome()      Sets the current record's "nome" value
 * @method TipoEndereco        setDescricao() Sets the current record's "descricao" value
 * @method TipoEndereco        setEndereco()  Sets the current record's "Endereco" collection
 * 
 * @package    DemoJquery
 * @subpackage model
 * @author     Romeu Godoi <romeu.godoi@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTipoEndereco extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tipo_endereco');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('nome', 'string', 45, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 45,
             ));
        $this->hasColumn('descricao', 'string', 1000, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 1000,
             ));

        $this->option('symfony', array(
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Endereco', array(
             'local' => 'id',
             'foreign' => 'tipo_endereco_id'));
    }
}